; PlatformIO Project Configuration File
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; [platformio]
; default_envs = sensors

[env]
framework = arduino
build_src_filter = -<*>
; upload_protocol = espota
extra_scripts = pre:load_environment.py
lib_deps = 
	https://github.com/tzapu/WiFiManager.git
	https://github.com/lollobaldo/esp-github-ota.git
	knolleary/PubSubClient@^2.8

[esp8266]
platform = espressif8266
board = nodemcuv2
monitor_speed = 115200

[esp32cam]
platform = espressif32
board = esp32cam
monitor_speed = 115200

[env:esp32playground]
extends = esp32cam
build_flags = ${env.build_flags} '-D MYDEBUG' '-D CLIENT_NAME="esp32playground"'
build_src_filter = ${env.build_src_filter} +<./esp32-playground/>
; upload_port = ESP--plants-p1.local

[env:plants]
extends = esp8266
build_flags = ${env.build_flags} '-D MYDEBUG' '-D CLIENT_NAME="plants"' '-DCORE_DEBUG_LEVEL=5'
build_src_filter = ${env.build_src_filter} +<plants/>

; [env:native]
; platform = native
; build_flags = '-D GTEST_COLOR'
; test_build_src = false
; lib_deps = 
; 	google/googletest@^1.10.0
; lib_compat_mode = off
; lib_ignore = 
; 	mqtt
; 	logger
; 	PubSubClient
; 	wifi

; [remoteNode]
; upload_flags = --auth=S_#fWLdk#*jR*85Y

; [localNode]
; extends = esp32cam
; upload_protocol = esptool

; [env:smallOta]
; extends = remoteNode
; board = myboard
; build_flags = ${env.build_flags} '-D CLIENT_NAME="ESP--small-ota"'
; build_src_filter = ${env.build_src_filter} +<./small-ota/>
; upload_port = 192.168.1.139

; [env:ledStripWindow]
; extends = remoteNode
; build_flags = ${env.build_flags} '-D CLIENT_NAME="window"'
; build_src_filter = ${env.build_src_filter} +<./led-strip/>
; upload_port = ESP--lights-leds-window

; [env:ledStripBed]
; extends = remoteNode
; build_flags = ${env.build_flags} '-D CLIENT_NAME="bed"'
; build_src_filter = ${env.build_src_filter} +<./led-strip/>
; upload_port = 192.168.1.128

; [env:lightBulb]
; extends = remoteNode
; board = esp_wroom_02
; build_flags = ${env.build_flags} '-D MYDEBUG' '-D CLIENT_NAME="bedside"'
; build_src_filter = ${env.build_src_filter} +<./light-bulb/>
; upload_port = ESP--lights-bulbs-bedside.local

; [env:ws-strip]
; extends = remoteNode
; build_flags = ${env.build_flags} '-D CLIENT_NAME="ESP--ws-strip"'
; build_src_filter = ${env.build_src_filter} +<./ws-strip/>
; upload_port = ESP--ws-strip.local
; lib_deps = 
; 	fastled/FastLED

; [env:sensors]
; extends = remoteNode
; build_flags = ${env.build_flags} '-D CLIENT_NAME="ESP--sensors"'
; build_src_filter = ${env.build_src_filter} +<./sensors/>
; upload_port = ESP--sensors.local
; lib_deps = 
; 	DHT ESP32

; [env:plants]
; extends = remoteNode
; build_flags = ${env.build_flags} '-D CLIENT_NAME="p1"'
; build_src_filter = ${env.build_src_filter} +<./plants/>
; upload_port = ESP--plants-p1.local

; [env:smallOtaDEBUG]
; extends = localNode
; ; board = myboard
; build_flags = ${env.build_flags} '-D MYDEBUG' '-D CLIENT_NAME="ESP--generic-ota"'
; build_src_filter = ${env.build_src_filter} +<small-ota/>

; [env:ledStripWindowDEBUG]
; extends = localNode
; build_flags = ${env.build_flags} '-D MYDEBUG' '-D CLIENT_NAME="window"'
; build_src_filter = ${env.build_src_filter} +<led-strip/>

; [env:lightBulbDEBUG]
; extends = localNode
; board = esp_wroom_02
; build_flags = ${env.build_flags} '-D MYDEBUG' '-D CLIENT_NAME="bedside"'
; build_src_filter = ${env.build_src_filter} +<light-bulb/>

; [env:ws-stripDEBUG]
; extends = localNode
; build_flags = ${env.build_flags} '-D MYDEBUG' '-D CLIENT_NAME="ws-strip"'
; build_src_filter = ${env.build_src_filter} +<./ws-strip/>

; [env:sensorsDEBUG]
; extends = localNode
; build_flags = ${env.build_flags} '-D MYDEBUG' '-D CLIENT_NAME="sensors"'
; build_src_filter = ${env.build_src_filter} +<sensors/>
; lib_deps = 
; 	DHT ESP32

; [env:plantsDEBUG]
; extends = localNode
; build_flags = ${env.build_flags} '-D MYDEBUG' '-D CLIENT_NAME="p1"' '-DCORE_DEBUG_LEVEL=5'
; build_src_filter = ${env.build_src_filter} +<plants/>
